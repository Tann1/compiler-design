001 PROGRAM TestProcedure(input, output);
002 
003 VAR
004     i, j : integer;
005     x, y : real;
006     p : boolean;
007 
008 PROCEDURE alpha(m, n : integer; r : real; k, o : integer; 
009                 w, z : real; q : boolean);
010 
011     VAR a, b, c : real;
012         i : integer;
013         
014     BEGIN
015         a := 1; b := 2;
016         c := a*b - w/z;
017          
018         i := 3;
019         k := k + i + j + n;
020         q := not p or (i = j) and (w > 2) and (w/z = 1.5);
021         z := r;
022         
023         writeln('alpha parms:  m = ', m, ', n = ', n, ', r = ', r:4:2, 
024                 ', k = ', k, ', o = ', o, ', w = ', w:4:2, ', z = ', z:4:2, 
025                 ', q = ', q); 
026         writeln('alpha locals: a = ', a:4:2, ', b = ', b:4:2, ', c = ', c:4:2,
027                 ', i = ', i);
028     END;
029    
030 procedure beta;
031 
032     var i, j : real;
033     
034     begin
035         i := 22; j := 44;
036         writeln('beta locals:  Hello, world! ', i+j:4:2);
037     end;
038   
039 PROCEDURE gamma(i, n : integer; x, r : real);
040 
041     VAR a, b, c : real;
042 
043     BEGIN
044         a := i + n; 
045         b := i*x + r;
046         c := i;
047         i := i + n;
048         
049         writeln('gamma parms:  i = ', i, ', n = ', n, ', x = ', x:4:2, ', r = ', r:4:2);
050         writeln('gamma locals: a = ', a:4:2, ', b = ', b:4:2, ', c = ', c:4:2); 
051                 
052         
053     END;    
054   
055 BEGIN
056     i := 5; j := 7;
057     x := 3; y := 2;
058     p := false;
059     writeln('main:         i = ', i, ', j = ', j, ', x = ', x:4:2, ', y = ', y:4:2, ', p = ', p);
060 
061     alpha(6, i - 3, 
062           x + y/i, 
063           i, j, 
064           x, y, 
065           p);
066     writeln('main:         i = ', i, ', j = ', j, ', x = ', x:4:2, ', y = ', y:4:2, ', p = ', p);
067 
068     beta();
069     writeln('main:         i = ', i, ', j = ', j, ', x = ', x:4:2, ', y = ', y:4:2, ', p = ', p);
070 
071     gamma(i, j, 
072           i/x, i*j);
073     writeln('main:         i = ', i, ', j = ', j, ', x = ', x:4:2, ', y = ', y:4:2, ', p = ', p);
074 END.

PASS 1 Syntax: There were no syntax errors.

PASS 2 Semantics:

===== CROSS-REFERENCE TABLE =====

*** PROGRAM TestProcedure ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
alpha           
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
beta            
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
gamma           
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
i                004 056 059 061 062 063 066 069 071 072 072 073
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
j                004 019 020 056 059 063 066 069 071 072 073
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
p                006 020 058 059 065 066 069 073
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = enumeration, Type id = boolean
x                005 057 059 062 064 066 069 072 073
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = real
y                005 057 059 062 064 066 069 073
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = real

*** PROCEDURE alpha ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
a                011 015 016 026
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
b                011 015 016 026
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
c                011 016 026
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
i                012 018 019 020 027
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
k                008 019 019 024
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
m                008 023
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
n                008 019 023
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
o                008 024
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
q                009 020 025
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = enumeration, Type id = boolean
r                008 021 023
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
w                009 016 020 020 024
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
z                009 016 020 021 024
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real

*** PROCEDURE beta ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
i                032 035 036
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
j                032 035 036
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real

*** PROCEDURE gamma ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
a                041 044 050
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
b                041 045 050
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
c                041 046 050
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
i                039 044 045 046 047 047 049
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
n                039 044 047 049
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = integer
r                039 045 049
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
x                039 045 049
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real

PASS 3 Compilation: Object file "TestProcedure.j" created.
